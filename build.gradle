/*
 * Copyright 2013 the original author or authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'
apply plugin: 'application'

apply plugin: 'codenarc'

apply plugin: 'idea'


version = '0.1'
mainClassName = 'gaiden.GaidenMain'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.1.4'
    compile 'org.apache.ant:ant:1.9.1'
    compile 'org.pegdown:pegdown:1.3.0'
    compile 'commons-io:commons-io:2.4'

    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'

    // optional dependencies for using Spock
    testRuntime 'cglib:cglib-nodep:2.2.2'       // enables mocking of classes (in addition to interfaces)
    testRuntime 'org.objenesis:objenesis:1.3'   // enables mocking of without default constructor (together with CGLIB)
}

test {
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

task wrap(type: Wrapper, description: "create a gradlew") {
    gradleVersion = '1.6'
}

task distribution(dependsOn: 'distZip')

task release(dependsOn: 'distribution')

gradle.taskGraph.whenReady { taskGraph ->
    if (!taskGraph.hasTask(release)) {
        version = "$version-SNAPSHOT"
    }
}

codenarc {
    configFile = new File('codenarc.groovy')
    ignoreFailures = true
    reportFormat = 'xml'
}
